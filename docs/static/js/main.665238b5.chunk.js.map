{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","onChange","target","value","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAe,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEXC,mBAAS,IAFE,mBAE1CC,EAF0C,KAE7BC,EAF6B,KAoBjD,OACI,0BAAMC,SAVW,SAAEC,GACrBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAe,SAAES,GAAF,OAAmBP,GAAnB,mBAAkCO,OACjDN,EAAc,MAOX,2BACCO,KAAK,OACLC,SApBkB,SAAEN,GAExBF,EAAeE,EAAEO,OAAOC,QAmBpBA,MAAUX,M,uBC7BTY,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAWH,GAH9C,+DAIMI,MAAMF,GAJZ,cAIbG,EAJa,gBAKKA,EAAUC,OALf,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE3B,MAAO,CACLC,GAAQD,EAAIC,GACZC,MAAQF,EAAIE,MACZV,IAAG,UAAKQ,EAAIG,cAAT,aAAK,EAAYC,iBAAiBZ,QAZvB,kBAiBZM,GAjBY,4CAAH,sDCCPO,EAAe,SAAC,GAA0B,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGxC,OAEG,yBAAKc,UAAU,0CAEd,yBAAKC,IAAOf,EAAMgB,IAAMN,IACxB,+BAAMA,EAAN,OCHKO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECJd,SAAEA,GAAgB,IAAD,EAEfd,mBAAS,CAElCqB,KAAO,GACPa,SAAS,IAL+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KA8B3C,OApBAC,qBAAW,WAEVxB,EAASC,GAAYwB,MAAM,SAAAC,GAE1BC,YAAY,WAERJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAKH,CAAEpB,IAIGqB,EDrB6BM,CAAc3B,GAAnCa,EALyB,EAK/BN,KAAea,EALgB,EAKhBA,QAGtB,OAEI,oCACA,4BAAKpB,GAEDoB,GAAW,4CAEf,yBAAKJ,UAAU,aAGRH,EAAOJ,KAAK,SAACC,GAAD,OAEb,kBAAC,EAAD,eACAkB,IAAMlB,EAAIC,IACHD,UEzBRmB,EAAe,WAAQ,IAAD,EAEK3C,mBAAU,CAAC,gBAFhB,mBAExBQ,EAFwB,KAEZT,EAFY,KAY/B,OACI,oCACG,4CAEE,kBAAC,EAAD,CAAcA,cAAkBA,IAElC,6BAEC,4BAEES,EAAWe,KAAK,SAACT,GAAD,OAEX,kBAAC,EAAD,CACC4B,IAAQ5B,EACRA,UAAaA,UCxBjC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.665238b5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategoria = ( { setCategorias } ) => {\r\n  \r\n    const [inputValue , setInputValue ] = useState('');\r\n    \r\n  \r\n    const handleInputChange = ( e ) => {\r\n\r\n        setInputValue( e.target.value );\r\n\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n      e.preventDefault();\r\n\r\n      if ( inputValue.trim().length > 2 )\r\n        setCategorias( ( categorias ) => [inputValue, ...categorias]);\r\n        setInputValue('');\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n\r\n           <input \r\n            type=\"text\"\r\n            onChange= { handleInputChange }\r\n            value = { inputValue }\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n\r\n  setCategorias:PropTypes.func.isRequired,\r\n\r\n\r\n}","\r\nexport const getGifs = async ( categoria ) => {\r\n\r\n         \r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria )}&limit=10&api_key=nt6qVJNT1p5CFzDX8NwJIppgsKU3S65p`;\r\n    const respuesta = await  fetch(url);\r\n    const { data  } = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n       return { \r\n         id    : img.id,\r\n         title : img.title,\r\n         url   : img.images?.downsized_medium.url \r\n       }\r\n\r\n    }); \r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem =  (  { id, title, url } ) => {\r\n\r\n  \r\n    return (\r\n       \r\n       <div className=\"card animate__animated animate__bounce\">\r\n            \r\n        <img src= { url } alt={ title } />\r\n        <p> { title } </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","// import React , { useState,  useEffect } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    //  const [images, setImages] = useState([]);\r\n\r\n      // se renombra data por images en la desestructuracion ( data: images )\r\n   const { data: images , loading }=  useFetchGifs( categoria );\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n        <h3>{categoria}</h3>       \r\n\r\n          { loading && <p>Cargando ... </p>  }  \r\n\r\n        <div className=\"card-grid\">\r\n            \r\n\r\n            {  images.map( (img) => (\r\n\r\n              <GifGridItem \r\n              key={ img.id }\r\n                {... img } \r\n              />\r\n            \r\n            ))\r\n\r\n            }\r\n  \r\n\r\n        </div>\r\n      </>  \r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n  const [ state, setState ] = useState({\r\n\r\n     data : [],\r\n     loading: true\r\n\r\n  });\r\n\r\n\r\n  useEffect( ()=>{\r\n\r\n   getGifs( categoria ).then( imgs => {\r\n         \r\n    setTimeout( () => {\r\n\r\n        setState({ \r\n            data: imgs, \r\n            loading: false\r\n        });\r\n\r\n    }, 1000);\r\n\r\n\r\n   });\r\n\r\n  },[ categoria ]);\r\n\r\n\r\n\r\n  return state;\r\n\r\n}","import React, { useState }  from 'react'\r\nimport { AddCategoria } from './components/AddCategoria';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ( ) => {\r\n    \r\n    const [categorias, setCategorias] = useState( ['Dragon Ball'] );\r\n\r\n    // const handleAdd = () => {\r\n       \r\n    //         // setCategorias( ['DeadPool', ...categorias ] );\r\n    //         setCategorias(  cat => ['DeadPool',...cat] );\r\n\r\n    // }\r\n    \r\n    \r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>  \r\n\r\n             <AddCategoria setCategorias = { setCategorias }/>\r\n\r\n           <hr></hr> \r\n\r\n            <ol>{ \r\n\r\n              categorias.map( (categoria) => (\r\n\r\n                   <GifGrid \r\n                    key = { categoria }\r\n                    categoria= { categoria  } \r\n                    />\r\n\r\n              ))\r\n             }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}